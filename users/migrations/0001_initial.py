# Generated by Django 5.2.5 on 2025-08-27 15:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("buyer", "买家"),
                            ("artist", "艺术家"),
                            ("merchant", "商家"),
                        ],
                        default="buyer",
                        max_length=10,
                        verbose_name="用户类型",
                    ),
                ),
                (
                    "phone",
                    models.CharField(blank=True, max_length=20, verbose_name="手机号"),
                ),
                (
                    "wechat",
                    models.CharField(blank=True, max_length=50, verbose_name="微信号"),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True, upload_to="avatars/", verbose_name="头像"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="是否认证"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户",
                "verbose_name_plural": "用户",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ArtistProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("artist_name", models.CharField(max_length=100, verbose_name="艺术家名称")),
                ("bio", models.TextField(blank=True, verbose_name="个人简介")),
                ("tags", models.JSONField(default=list, verbose_name="标签")),
                (
                    "is_approved",
                    models.BooleanField(default=False, verbose_name="是否通过审核"),
                ),
                (
                    "approval_date",
                    models.DateTimeField(blank=True, null=True, verbose_name="审核通过时间"),
                ),
                (
                    "followers_count",
                    models.PositiveIntegerField(default=0, verbose_name="粉丝数"),
                ),
                (
                    "works_count",
                    models.PositiveIntegerField(default=0, verbose_name="作品数"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="artist_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "艺术家档案",
                "verbose_name_plural": "艺术家档案",
            },
        ),
        migrations.CreateModel(
            name="BuyerProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "shipping_addresses",
                    models.JSONField(default=list, verbose_name="收货地址"),
                ),
                (
                    "favorite_artists",
                    models.ManyToManyField(
                        blank=True, to="users.artistprofile", verbose_name="收藏的艺术家"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buyer_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "买家档案",
                "verbose_name_plural": "买家档案",
            },
        ),
        migrations.CreateModel(
            name="MerchantProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_name", models.CharField(max_length=200, verbose_name="公司名称")),
                (
                    "business_license",
                    models.FileField(upload_to="licenses/", verbose_name="营业执照"),
                ),
                (
                    "company_description",
                    models.TextField(blank=True, verbose_name="公司描述"),
                ),
                (
                    "is_approved",
                    models.BooleanField(default=False, verbose_name="是否通过审核"),
                ),
                (
                    "approval_date",
                    models.DateTimeField(blank=True, null=True, verbose_name="审核通过时间"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="merchant_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "商家档案",
                "verbose_name_plural": "商家档案",
            },
        ),
    ]
